@model F1WebSite.ViewModels.DriversViewModel
@{
    ViewData["Title"] = "F1 races";
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <script src="~/js/site.js"></script>

</head>
<body>
    <div class="F1-title">
        <h1>F1 Races</h1>
        <button id="addRaceButton" class="addButton" onclick="togglePopup()">Add a new race</button>

        <select id="seasonTG" class="race-select" name="seasonTG" required onchange="filterRaces()">
            <option value="" disabled selected>Season:</option>
            @foreach (var season in Model.Seasons)
            {
                <option value="@season.seasonId">@season.year</option>
            }
            
        </select>



        <div id="myPopup" class="popup">
            <div class="popup-content">
                <h2>Add a new race</h2>
                <div class="form">
                    <label for="name">Race name:</label>
                    <input type="text" id="name" name="name" required />

                    <label for="date">Date (YYYY-MM-DD):</label>
                    <input type="text" id="date" name="date" required pattern="\d{4}-\d{2}-\d{2}" placeholder="YYYY-MM-DD" />
                    <small>Format: YYYY-MM-DD</small>

                    <label for="laps">Number of laps:</label>
                    <input type="text" id="laps" name="laps" required />

                    <label for="track">Track:</label>
                    <select id="track" name="track" required>
                        <option value="" disabled selected>Select a track</option>
                        @foreach (var track in Model.Tracks)
                        {
                            <option value="@track.trackId">@track.name</option>
                        }
                    </select>
                </div>
                <div class="popButton-container">
                    <button type="button" class="popButton" onclick="submitRace()">Submit</button>
                    <button type="button" class="popButton" onclick="closePopup()">Cancel</button>
                </div>
            </div>
        </div>

        <div class="overlay" onclick="closePopup()"></div>
    </div>

    <div class="race-container">
        @foreach (var race in Model.Races)
        {
            Tracks track = Model.Tracks.FirstOrDefault(t => t.trackId == race.trackId);
            <div class="race-card" data-season="@race.season">
                <a href="@Url.Action("Result", "Home", new { race.Id })" class="team-card">
                    <div class="race-header">
                        <h1>@race.name</h1>
                    </div>
                    <div class="race-details">
                        @if (DateTime.TryParse(race.date, out var raceDate))
                        {
                            <p><strong>Date:</strong> @raceDate.ToString("yyyy-MM-dd")</p>
                        }
                        else
                        {
                            <p><strong>Date:</strong> Invalid date</p>
                        }
                        <p><strong>Laps:</strong> @race.laps</p>
                        <p><strong>Track:</strong> @(track?.name ?? "Unknown Track")</p>
                    </div>
                </a>
            </div>
        }
    </div>  
    <script>
        const addRaceUrl = '@Url.Action("AddRace", "Home")';//URL.Action is a razor helper therefor it can only be used here and not in the site.js

    </script>
</body>
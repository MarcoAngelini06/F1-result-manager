/*
Deployment script for F1

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar F1 "F1"
:setvar DatabaseName "F1"
:setvar DefaultFilePrefix "F1"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL15.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL15.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO

IF (SELECT OBJECT_ID('tempdb..#tmpErrors')) IS NOT NULL DROP TABLE #tmpErrors
GO
CREATE TABLE #tmpErrors (Error int)
GO
SET XACT_ABORT ON
GO
SET TRANSACTION ISOLATION LEVEL READ COMMITTED
GO
BEGIN TRANSACTION
GO
PRINT N'Rename refactoring operation with key e21ee918-f1d3-4e76-9ec7-82ad87f56c28 is skipped, element [dbo].[Car].[Nome] (SqlSimpleColumn) will not be renamed to name';


GO
PRINT N'The following operation was generated from a refactoring log file cd86ebea-d5c6-47e3-9881-ec37d746bf11';

PRINT N'Rename [dbo].[Drivers].[cognome] to surname';


GO
EXECUTE sp_rename @objname = N'[dbo].[Drivers].[cognome]', @newname = N'surname', @objtype = N'COLUMN';


GO
IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
    BEGIN
        ROLLBACK;
    END

IF OBJECT_ID(N'tempdb..#tmpErrors') IS NULL
    CREATE TABLE [#tmpErrors] (
        Error INT
    );

IF @@TRANCOUNT = 0
    BEGIN
        INSERT  INTO #tmpErrors (Error)
        VALUES                 (1);
        BEGIN TRANSACTION;
    END


GO
PRINT N'Rename refactoring operation with key 8ee3dd8c-6278-4e04-84b1-3ebd40efcd4b is skipped, element [dbo].[Results].[pos] (SqlSimpleColumn) will not be renamed to finishingPosition';


GO
PRINT N'Rename refactoring operation with key 3ea17f32-469f-4225-bbdb-81eb9c0c27ea is skipped, element [dbo].[Results].[pitsops] (SqlSimpleColumn) will not be renamed to nPitsops';


GO
PRINT N'Creating Table [dbo].[Car]...';


GO
CREATE TABLE [dbo].[Car] (
    [Id]     INT          NOT NULL,
    [name]   VARCHAR (50) NULL,
    [immage] IMAGE        NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
    BEGIN
        ROLLBACK;
    END

IF OBJECT_ID(N'tempdb..#tmpErrors') IS NULL
    CREATE TABLE [#tmpErrors] (
        Error INT
    );

IF @@TRANCOUNT = 0
    BEGIN
        INSERT  INTO #tmpErrors (Error)
        VALUES                 (1);
        BEGIN TRANSACTION;
    END


GO
PRINT N'Creating Table [dbo].[CarSeason]...';


GO
CREATE TABLE [dbo].[CarSeason] (
    [Id]     INT NOT NULL,
    [car]    INT NULL,
    [season] INT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
    BEGIN
        ROLLBACK;
    END

IF OBJECT_ID(N'tempdb..#tmpErrors') IS NULL
    CREATE TABLE [#tmpErrors] (
        Error INT
    );

IF @@TRANCOUNT = 0
    BEGIN
        INSERT  INTO #tmpErrors (Error)
        VALUES                 (1);
        BEGIN TRANSACTION;
    END


GO
PRINT N'Creating Table [dbo].[DriverTeam]...';


GO
CREATE TABLE [dbo].[DriverTeam] (
    [Id]     INT NOT NULL,
    [Team]   INT NULL,
    [Driver] INT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
    BEGIN
        ROLLBACK;
    END

IF OBJECT_ID(N'tempdb..#tmpErrors') IS NULL
    CREATE TABLE [#tmpErrors] (
        Error INT
    );

IF @@TRANCOUNT = 0
    BEGIN
        INSERT  INTO #tmpErrors (Error)
        VALUES                 (1);
        BEGIN TRANSACTION;
    END


GO
PRINT N'Creating Table [dbo].[RaceResult]...';


GO
CREATE TABLE [dbo].[RaceResult] (
    [Id]     INT NOT NULL,
    [race]   INT NULL,
    [result] INT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
    BEGIN
        ROLLBACK;
    END

IF OBJECT_ID(N'tempdb..#tmpErrors') IS NULL
    CREATE TABLE [#tmpErrors] (
        Error INT
    );

IF @@TRANCOUNT = 0
    BEGIN
        INSERT  INTO #tmpErrors (Error)
        VALUES                 (1);
        BEGIN TRANSACTION;
    END


GO
PRINT N'Creating Table [dbo].[Races]...';


GO
CREATE TABLE [dbo].[Races] (
    [Id]     INT  NOT NULL,
    [season] INT  NULL,
    [track]  INT  NULL,
    [date]   DATE NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
    BEGIN
        ROLLBACK;
    END

IF OBJECT_ID(N'tempdb..#tmpErrors') IS NULL
    CREATE TABLE [#tmpErrors] (
        Error INT
    );

IF @@TRANCOUNT = 0
    BEGIN
        INSERT  INTO #tmpErrors (Error)
        VALUES                 (1);
        BEGIN TRANSACTION;
    END


GO
PRINT N'Creating Table [dbo].[Results]...';


GO
CREATE TABLE [dbo].[Results] (
    [Id]                INT          NOT NULL,
    [DriverTeam]        INT          NULL,
    [finishingPosition] VARCHAR (50) NULL,
    [finishingTime]     TIME (7)     NULL,
    [laps]              INT          NULL,
    [nPitsops]          INT          NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
    BEGIN
        ROLLBACK;
    END

IF OBJECT_ID(N'tempdb..#tmpErrors') IS NULL
    CREATE TABLE [#tmpErrors] (
        Error INT
    );

IF @@TRANCOUNT = 0
    BEGIN
        INSERT  INTO #tmpErrors (Error)
        VALUES                 (1);
        BEGIN TRANSACTION;
    END


GO
PRINT N'Creating Table [dbo].[Season]...';


GO
CREATE TABLE [dbo].[Season] (
    [Id]   INT  NOT NULL,
    [year] DATE NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
    BEGIN
        ROLLBACK;
    END

IF OBJECT_ID(N'tempdb..#tmpErrors') IS NULL
    CREATE TABLE [#tmpErrors] (
        Error INT
    );

IF @@TRANCOUNT = 0
    BEGIN
        INSERT  INTO #tmpErrors (Error)
        VALUES                 (1);
        BEGIN TRANSACTION;
    END


GO
PRINT N'Creating Table [dbo].[Tracks]...';


GO
CREATE TABLE [dbo].[Tracks] (
    [Id]      INT          NOT NULL,
    [name]    VARCHAR (50) NULL,
    [city]    VARCHAR (50) NULL,
    [country] VARCHAR (50) NULL,
    [layout]  IMAGE        NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
    BEGIN
        ROLLBACK;
    END

IF OBJECT_ID(N'tempdb..#tmpErrors') IS NULL
    CREATE TABLE [#tmpErrors] (
        Error INT
    );

IF @@TRANCOUNT = 0
    BEGIN
        INSERT  INTO #tmpErrors (Error)
        VALUES                 (1);
        BEGIN TRANSACTION;
    END


GO

IF EXISTS (SELECT * FROM #tmpErrors) ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT>0 BEGIN
PRINT N'The transacted portion of the database update succeeded.'
COMMIT TRANSACTION
END
ELSE PRINT N'The transacted portion of the database update failed.'
GO
IF (SELECT OBJECT_ID('tempdb..#tmpErrors')) IS NOT NULL DROP TABLE #tmpErrors
GO
GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'e21ee918-f1d3-4e76-9ec7-82ad87f56c28')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('e21ee918-f1d3-4e76-9ec7-82ad87f56c28')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'cd86ebea-d5c6-47e3-9881-ec37d746bf11')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('cd86ebea-d5c6-47e3-9881-ec37d746bf11')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '8ee3dd8c-6278-4e04-84b1-3ebd40efcd4b')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('8ee3dd8c-6278-4e04-84b1-3ebd40efcd4b')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '3ea17f32-469f-4225-bbdb-81eb9c0c27ea')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('3ea17f32-469f-4225-bbdb-81eb9c0c27ea')

GO

GO
PRINT N'Update complete.';


GO
